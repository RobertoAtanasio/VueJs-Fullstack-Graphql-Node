-----------------------------------------------------------------------------------------------
Caso exista algum processo executando na porta 8080, segue os comando para excluir o processo.
Abrir o CMD com opção de administrador:

	netstat -ano | findstr 8080

	taskkill /F /pid 3744
-----------------------------------------------------------------------------------------------

node server         --> executa o servidor backend

Em server: 

    npm init

    package name: namegator-server

    Teclar enter para as demais opções!

Obs.: com isso, foi criado um package.json em server.

Crias as dependências:

    npm install apollo-server --save    --> biblioteca para se utilizar o graphql no projeto
    npm install graphql --save
    npm install axios --save
    npm install pg --save               --> para o PostgreSQL
    
Na pasta server, testar: node server    --> aparecerá a descrição da Function construtora AplolloServer

É preciso a definiçao do schema
    Definimos o type de dado (criamos duas entidades - Item e Query)
    Definimos a query

Além dos resolvers

Obs.: Foi instalado o software GraphQl PlayGround
    Iniciando:
        Selecionar URL ENDPOINT
            http://localhost:4000

        Obs.: A partir disto, podemos testar nossa API com o que está definido em server.js

Como utilizar no frontend:
    Importar uma biblioteca para se fazer requisições http de forma assíncrona.
    Em client, instalar:
        npm install axios --save

    Em DomainsList.vue, fazer a importação do axios para acessar o backend.

Como enviar dados para o backend:
    os envios serão feitos através das Mutation definidas em server.js


Para verificar se um determinado domínio está disponível (DNS), vamos utilizar
um pacote do NODE chamado DNS, importando-o em server.js

----------------------------------------------------------------------------------------------------------------------------------

Conectando com o Banco de dados:

C:\Program Files\PostgreSQL\10\bin		// deve está adicionada na variável global do sistema

abrir o banco default: 
	psql -h localhost -U postgres
	psql -U postgres
	
create database knowledge;				cria o banco de dados

\c knowledge_final						conectar com o banco

\dt										lista as tabelas criadas

SELECT * FROM pg_user;

SELECT * FROM pg_tables;

Sair da ferramenta com \q

---

create database namegator;

Após a criação do arquivo create.PostgreSQL,
executar em C:\Vue-curso\fullstack_vue_graphql_node>
    psql -d namegator -f database/create.sql            ??? não funcionou comigo!

----------------------------------------------------------------------------------------------------------------------------------

